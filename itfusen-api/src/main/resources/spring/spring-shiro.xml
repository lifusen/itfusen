<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">


    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
<!--
        <property name="loginUrl" value="http://localhost:7979/"></property>
-->

<!--
        <property name="unauthorizedUrl" value="http://localhost:8080/401.vm"></property>
-->

        <property name="filters">
            <map>
                <entry key="authc_with_no_direct">
                    <bean class="com.itfusen.service.comm.shiro.filter.NoRedirectAuthFilter" />
                </entry>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                # login could be access
                /auth/login = anon
                /user/adduser = anon
                /portal/** = anon

                /** = authc_with_no_direct
            </value>
        </property>
    </bean>


 <!--   # like [urls] in ini file
    # /admin/** = authc, perms[document:read]
    # if this user don't have this role，return a 401 error

    # login could be access
    /user/login = anon
    /user/logout = logout

    # some public api
    /approle/queryByClientName/** = anon
    /applog/addList = anon
    /apperror/addList = anon
    /devicelog/addList = anon
    /auditlog/addList = anon
    /client/querybyname/** = anon



    # static resource could be access
    /css/** = anon
    /js/** = anon
    /images/** = anon
    /fonts/** = anon

    /oapi/store/getWillScore = anon
    /oapi/store/convertWillScore = anon

    # besides up urls,all urls need to be authentization
    # if no login then go to /login



    /** = authc-->

    <bean id="loginRealm" class="com.itfusen.service.comm.shiro.realm.UserRealm"></bean>

    <!-- securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="loginRealm" />
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!-- <property name="sessionMode" value="native"/> -->
    </bean>

    <!--life cycle-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- enable shiro annotion -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
         <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true-->
        <property name="deleteInvalidSessions" value="false"/>
        <!-- 是否开启会话验证器任务 默认true -->
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="sessionDAO" ref="sessionDao"/>
        <!-- 默认JSESSIONID，同tomcat/jetty在cookie中缓存标识相同，修改用于防止访问404页面时，容器生成的标识把shiro的覆盖掉 -->
        <property name="sessionIdCookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg name="name" value="SHRIOSESSIONID"/>
            </bean>
        </property>
        <property name="sessionListeners">
            <list>
                <bean class="com.itfusen.service.comm.shiro.session.ShiroSessionListener"/>
            </list>
        </property>
    </bean>

    <!-- 自定义Session工厂方法 返回会标识是否修改主要字段的自定义Session-->
    <bean id="sessionFactory" class="com.itfusen.service.comm.shiro.session.ShiroSessionFactory"/>

    <!-- 普通持久化接口，不会被缓存 每次doReadSession会被反复调用 -->
    <!--<bean class="com.gqshao.authentication.dao.RedisSessionDao">-->
    <!-- 使用可被缓存的Dao ，本地缓存减轻网络压力 -->
    <!--<bean id="sessionDao" class="com.gqshao.authentication.dao.CachingSessionDao">-->
    <!-- 可缓存Dao，操作自定义Session,添加标识位，减少doUpdate方法中Redis的连接次数来减轻网络压力 -->
    <bean id="sessionDao" class="com.itfusen.service.comm.shiro.session.CachingShiroSessionDao">
        <property name="prefix" value="ItfusenShiroSession_"/>
        <!-- 注意中央缓存有效时间要比本地缓存有效时间长-->
        <property name="seconds" value="1800"/>
    </bean>

    <!-- shiro error Interceptor -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">/WEB-INF/vm/common/401.vm</prop>
                <prop key="org.apache.shiro.authz.UnauthenticatedException">/WEB-INF/vm/common/403.vm</prop>
                <prop key="java.lang.IllegalArgumentException">/WEB-INF/vm/common/500.vm</prop>
                <prop key="java.lang.Exception">/WEB-INF/vm/common/500.vm</prop>
            </props>
        </property>
    </bean>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="v_v-re-baidu"/>
        <property name="httpOnly" value="true"/>
        <!-- 配置存储rememberMe Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
         -->
        <property name="maxAge" value="2592000"/><!-- 30天时间，记住我30天 -->
    </bean>

</beans>